on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_run:
    workflows: ["CI"]
    types:
      - completed

name: AWS ECR push

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps: 
    - name: Checkout
      uses: actions/checkout@v2

    - name: Congigure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Test AWS credentials
      run: aws sts get-caller-identity

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env: 
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
        IMAGE_TAG: "latest"
      run: |
        docker build -t ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} .
        echo "Pushing image to Amazon ECR..."
        docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
        echo "::set-output name=image::${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}"

    - name: Install and configure kubectl
      run: |
        curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/kubectl
        chmod +x ./kubectl
        mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
        echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
        kubectl version --client
        echo ${{ secrets.KUBECONFIG }} | base64 --decode > kubeconfig.yaml

    - name: Deploy to EKS
      env:
        IMAGE_URI: ${{ steps.build-image.outputs.image }}
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        export KUBECONFIG=kubeconfig.yaml
        export ECR_REPOSITORY=${{ secrets.ECR_REGISTRY }}/${{ secrets.REPO_NAME }}
        export IMAGE_TAG=latest
        envsubst < k8s/app_deployment.yml
        kubectl kustomize k8s/ | kubectl apply -f -


